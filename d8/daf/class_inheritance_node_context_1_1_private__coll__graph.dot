digraph "InheritanceNodeContext::Private"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="InheritanceNodeContext\l::Private",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_classDef",fontcolor="grey" ];
  Node2 [id="Node000002",label="ClassDef",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/dcf/class_class_def.html",tooltip="A abstract class representing of a compound symbol."];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Definition",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d5/dcc/class_definition.html",tooltip="The common base class of all entity definitions found in the sources."];
  Node4 -> Node1 [id="edge3_Node000001_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_classContext",fontcolor="grey" ];
  Node4 [id="Node000004",label="CachedItem\< TemplateVariant,\l InheritanceNodeContext\l::Private, &Private::createClass \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d7/dc1/class_cached_item.html",tooltip=" "];
  Node5 -> Node4 [id="edge4_Node000004_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_item",fontcolor="grey" ];
  Node5 [id="Node000005",label="TemplateVariant",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/dba/class_template_variant.html",tooltip="Variant type which can hold one value of a fixed set of types."];
  Node6 -> Node4 [id="edge5_Node000004_Node000006",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< TemplateVariant,\l InheritanceNodeContext\l::Private, &Private::createClass \>",fontcolor="grey" ];
  Node6 [id="Node000006",label="CachedItem\< T, TOwner,\l creator \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d7/dc1/class_cached_item.html",tooltip="Wrapper for data that needs to be cached."];
  Node7 -> Node1 [id="edge6_Node000001_Node000007",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_name",fontcolor="grey" ];
  Node7 [id="Node000007",label="QCString",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d45/class_q_c_string.html",tooltip="This is an alternative implementation of QCString."];
  Node8 -> Node1 [id="edge7_Node000001_Node000008",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" s_inst",fontcolor="grey" ];
  Node8 [id="Node000008",label="PropertyMap\< Inheritance\lNodeContext::Private \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d5/dbf/class_property_map.html",tooltip=" "];
  Node9 -> Node8 [id="edge8_Node000008_Node000009",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< InheritanceNodeContext\l::Private \>",fontcolor="grey" ];
  Node9 [id="Node000009",label="PropertyMap\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d5/dbf/class_property_map.html",tooltip="Class representing a mapping of properties and the corresponding getter function."];
}
